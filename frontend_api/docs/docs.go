// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "KGS",
            "url": "http://www.swagger.io/support",
            "email": "vincent@kgs.tw"
        },
        "license": {
            "name": "Belong to KGS",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/": {
            "get": {
                "description": "這個 api 主要是要讓客戶端驗證，並且取得 JWT 簽名，如果拿到簽名的話，在後續就可以根據簽名來存取 api，client_id 當有營運單位提出對接時，由大後台產生並提供給前端",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "客戶端驗證，並且取得 JWT 簽名",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.TokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RegisterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.VerificationErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/existence": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Check User Existence",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "檢查email / mobile number+ country code / account是否存在",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Mobile Number",
                        "name": "mobileNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country Code",
                        "name": "countryCode",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.ExistenceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/login/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "這個 api 主要是要讓客戶端登入，登入成功後會回傳 JWT 簽名，如果拿到簽名的話，在後續就可以根據簽名來存取 api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "登入",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LoignPassResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.LoginAnomalousResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/verification/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Verification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "驗證",
                "parameters": [
                    {
                        "description": "Verification Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.VerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.VerificationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/verificationCode/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Register Verification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "申請驗證碼",
                "parameters": [
                    {
                        "enum": [
                            "forgotPwd",
                            "unusualLogin"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country Code",
                        "name": "countryCode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Mobile Number",
                        "name": "mobileNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.RegisterVerificationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "loginType",
                "password"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "loginType": {
                    "type": "string",
                    "enum": [
                        "account",
                        "email",
                        "mobileNumber"
                    ]
                },
                "mobileNumber": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 6
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "account",
                "password",
                "verificationCode",
                "verificationCodePrefix",
                "verificationCodeToken"
            ],
            "properties": {
                "account": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 6
                },
                "verificationCode": {
                    "type": "string"
                },
                "verificationCodePrefix": {
                    "type": "string"
                },
                "verificationCodeToken": {
                    "type": "string"
                }
            }
        },
        "request.VerificationRequest": {
            "type": "object",
            "required": [
                "type",
                "verificationCode",
                "verificationCodePrefix",
                "verificationCodeToken"
            ],
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "forgotPwd",
                        "unusualLogin"
                    ]
                },
                "verificationCode": {
                    "type": "string"
                },
                "verificationCodePrefix": {
                    "type": "string"
                },
                "verificationCodeToken": {
                    "type": "string"
                }
            }
        },
        "response.ExistenceResponse": {
            "type": "object",
            "properties": {
                "isExist": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.LoginAnomalousResponse": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                }
            }
        },
        "response.LoignPassResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                }
            }
        },
        "response.RegisterResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                }
            }
        },
        "response.RegisterVerificationResponse": {
            "type": "object",
            "properties": {
                "verificationCodePrefix": {
                    "type": "string"
                },
                "verificationCodeToken": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "trace_id": {
                    "type": "integer"
                }
            }
        },
        "response.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "response.VerificationErrorResponse": {
            "type": "object",
            "properties": {
                "errorCount": {
                    "description": "已錯誤次數",
                    "type": "integer"
                },
                "totalAttempts": {
                    "description": "總共幾次機會",
                    "type": "integer"
                }
            }
        },
        "response.VerificationResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobileNumber": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "KGS Frontend API",
	Description:      "This is the KGS Frontend API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
